{"version":3,"file":"static/js/722.ac0f5783.chunk.js","mappings":"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","sources":["components/pageProps/Breadcrumbs.js","components/pageProps/shopPage/ProductBanner.js","components/pageProps/shopPage/Pagination.js","components/pageProps/shopPage/shopBy/NavTitle.js","components/pageProps/shopPage/shopBy/Category.js","components/pageProps/shopPage/ShopSideNav.js","pages/Catalog/Catalog.js"],"sourcesContent":["import {memo, useEffect, useState} from \"react\";\nimport { HiOutlineChevronRight } from \"react-icons/hi\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Breadcrumbs = ({ prevLocation, title }) => {\n  const location = useLocation();\n  const [locationPath, setLocationPath] = useState(\"\");\n  useEffect(() => {\n    setLocationPath(location.pathname.split(\"/\")[1]);\n  }, [location]);\n\n  return (\n    <div className=\"w-full py-10 xl:py-10 flex flex-col gap-3\">\n      <h1 className=\"text-5xl text-primeColor font-titleFont font-bold\">\n        {title}\n      </h1>\n      <p className=\"text-sm font-normal text-lightText capitalize flex items-center\">\n        <span> {prevLocation === \"\" ? \"Home\" : prevLocation}</span>\n\n        <span className=\"px-1\">\n          <HiOutlineChevronRight />\n        </span>\n        <span className=\"capitalize font-semibold text-primeColor\">\n          {locationPath}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default memo(Breadcrumbs);\n","import { useEffect, useState } from \"react\";\nimport { BsGridFill } from \"react-icons/bs\";\nimport { ImList } from \"react-icons/im\";\nimport { GoTriangleDown } from \"react-icons/go\";\n\nconst ProductBanner = ({ itemsPerPageFromBanner }) => {\n  //   const [selected, setSelected] = useState(\"\");\n  const [girdViewActive, setGridViewActive] = useState(true);\n  const [listViewActive, setListViewActive] = useState(false);\n  useEffect(() => {\n    const gridView = document.querySelector(\".gridView\");\n    const listView = document.querySelector(\".listView\");\n\n    gridView.addEventListener(\"click\", () => {\n      setListViewActive(false);\n      setGridViewActive(true);\n    });\n    listView.addEventListener(\"click\", () => {\n      setGridViewActive(false);\n      setListViewActive(true);\n    });\n  }, [girdViewActive, listViewActive]);\n\n  return (\n    <div className=\"w-full flex flex-col md:flex-row md:items-center justify-between\">\n      <div className=\"flex items-center gap-4\">\n        <span\n          className={`${\n            girdViewActive\n              ? \"bg-primeColor text-white\"\n              : \"border-[1px] border-gray-300 text-[#737373]\"\n          } w-8 h-8 text-lg flex items-center justify-center cursor-pointer gridView`}\n        >\n          <BsGridFill />\n        </span>\n        <span\n          className={`${\n            listViewActive\n              ? \"bg-primeColor text-white\"\n              : \"border-[1px] border-gray-300 text-[#737373]\"\n          } w-8 h-8 text-base flex items-center justify-center cursor-pointer listView`}\n        >\n          <ImList />\n        </span>\n      </div>\n      <div className=\"flex items-center gap-2 md:gap-6 mt-4 md:mt-0\">\n        <div className=\"flex items-center gap-2 text-[#767676] relative\">\n          <label className=\"block\">Показать:</label>\n          <select\n            onChange={(e) => itemsPerPageFromBanner(+e.target.value)}\n            id=\"countries\"\n            className=\"w-16 md:w-20 border-[1px] border-gray-200 py-1 px-4 cursor-pointer text-primeColor text-base block dark:placeholder-gray-400 appearance-none focus-within:outline-none focus-visible:border-primeColor\"\n          >\n            <option value=\"12\">12</option>\n            <option value=\"24\">24</option>\n            <option value=\"36\">36</option>\n            <option value=\"48\">48</option>\n          </select>\n          <span className=\"absolute text-sm right-3 top-2.5\">\n            <GoTriangleDown />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductBanner;\n","import { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Product from \"../../home/Products/Product\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProducts } from \"../../../store/features/products/productsSlice\";\n\nfunction Items({ currentItems }) {\n  return (\n    <>\n      {currentItems &&\n        currentItems\n          .filter((item) => item && item.id)\n          .map((item) => (\n            <div key={item.id} className=\"w-full\">\n              <Product\n                id={item.id}\n                name={item.name}\n                imageUrl={item.imageUrl}\n                description={item.description}\n                status={item.status}\n                specifications={item.specifications}\n                category={item.category?.name || \"Неизвестная категория\"}\n                createdAt={item.createdAt}\n                inStock={item.inStock}\n                price={item.price}\n              />\n            </div>\n          ))}\n    </>\n  );\n}\n\nconst Pagination = ({ itemsPerPage, selectedCategory }) => {\n  const dispatch = useDispatch();\n  const items = useSelector((state) => state.products.list) || [];\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(getProducts({ page: currentPage, limit: itemsPerPage }));\n  }, [dispatch, currentPage, itemsPerPage]);\n\n  // Фильтрация продуктов по выбранной категории\n  const filteredItems = selectedCategory\n    ? items.filter((item) => item.category?.id === selectedCategory)\n    : items;\n\n  const currentItems = filteredItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n  const pageCount = Math.ceil(filteredItems.length / itemsPerPage);\n\n  const handlePageClick = (event) => {\n    setCurrentPage(event.selected + 1);\n  };\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-10 mdl:gap-4 lg:gap-10\">\n        <Items currentItems={currentItems} />\n      </div>\n      <div className=\"flex flex-col mdl:flex-row justify-center mdl:justify-between items-center\">\n        <ReactPaginate\n          nextLabel=\"\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={3}\n          marginPagesDisplayed={2}\n          pageCount={pageCount}\n          previousLabel=\"\"\n          pageLinkClassName=\"w-9 h-9 border-[1px] border-lightColor hover:border-gray-500 duration-300 flex justify-center items-center\"\n          pageClassName=\"mr-6\"\n          containerClassName=\"flex text-base font-semibold font-titleFont py-10\"\n          activeClassName=\"bg-greenPrimeColor text-white\"\n        />\n        <p className=\"text-base font-normal text-greenPrimeColor\">\n          Товары от {(currentPage - 1) * itemsPerPage + 1} до{\" \"}\n          {Math.min(currentPage * itemsPerPage, filteredItems.length)} из {filteredItems.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import { BiCaretDown } from \"react-icons/bi\";\n\nconst NavTitle = ({ title, icons }) => {\n  return (\n    <div className=\"flex items-center justify-between pb-5\">\n      {icons ? (\n        <>\n          <h3 className=\"font-bold lg:text-xl text-primeColor\">{title}</h3>\n          {icons && <BiCaretDown />}\n        </>\n      ) : (\n        <>\n          <h3 className=\"font-bold lg:text-xl text-primeColor\">{title}</h3>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NavTitle;\n","import { useEffect } from \"react\";\nimport { ImPlus } from \"react-icons/im\";\nimport NavTitle from \"./NavTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCategories } from \"../../../../store/features/categories/categoriesSlice\";\n\nconst Category = ({ onSelectCategory }) => {\n  const dispatch = useDispatch();\n  const { list } = useSelector((state) => state.categories);\n\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  return (\n    <div className=\"w-full\">\n      <NavTitle title=\"Каталог по категориям\" icons={false} />\n      <div>\n        <ul className=\"flex flex-col gap-4 text-sm lg:text-base text-[#767676]\">\n          {list.map(({ id, name }) => (\n            <li\n              key={id}\n              className=\"border-b-[1px] border-b-[#F0F0F0] pb-2 flex items-center justify-between cursor-pointer\"\n              onClick={() => onSelectCategory(id)} // Выбор категории\n            >\n              {name}\n              <span className=\"text-[10px] lg:text-xs text-gray-400 hover:text-primeColor duration-300\">\n                <ImPlus />\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Category;\n","import Category from \"./shopBy/Category\";\n\nconst ShopSideNav = ({ onSelectCategory }) => {\n  return (\n    <div className=\"w-full flex flex-col gap-6\">\n      <Category icons={false} onSelectCategory={onSelectCategory} />\n    </div>\n  );\n};\n\nexport default ShopSideNav;\n","import { memo, useEffect, useState } from \"react\";\nimport Breadcrumbs from \"../../components/pageProps/Breadcrumbs\";\nimport Pagination from \"../../components/pageProps/shopPage/Pagination\";\nimport ProductBanner from \"../../components/pageProps/shopPage/ProductBanner\";\nimport ShopSideNav from \"../../components/pageProps/shopPage/ShopSideNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProducts } from \"../../store/features/products/productsSlice\";\nimport { getCategories } from \"../../store/features/categories/categoriesSlice\";\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const { list: categories, isLoading: isCategoriesLoading } = useSelector((state) => state.categories);\n  const [itemsPerPage, setItemsPerPage] = useState(12);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false); // Управление состоянием мобильной панели\n\n  const itemsPerPageFromBanner = (itemsPerPage) => {\n    setItemsPerPage(itemsPerPage);\n  };\n\n  useEffect(() => {\n    dispatch(getCategories()).then(({ payload }) => {\n      const defaultCategory = payload.find((cat) => cat.name === \"Пазогребневые плиты\");\n      if (defaultCategory) {\n        setSelectedCategory(defaultCategory.id);\n      }\n    });\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  const handleCategorySelect = (categoryId) => {\n    setSelectedCategory(categoryId);\n    setIsMobileNavOpen(false);\n  };\n\n  return (\n    <div className=\"max-w-container mx-auto px-4\">\n      <Breadcrumbs title=\"Каталог\" />\n      <div className=\"w-full h-full flex flex-col gap-6 pb-20 mdl:flex-row mdl:gap-10\">\n        <button\n          className=\"mdl:hidden mb-4 bg-greenPrimeColor text-white py-2 px-4 rounded\"\n          onClick={() => setIsMobileNavOpen(true)}\n        >\n          Открыть категории\n        </button>\n        {isMobileNavOpen && (\n          <div className=\"fixed inset-0 bg-white z-50 p-4 overflow-auto\">\n            <button\n              className=\"absolute top-4 right-4 text-xl\"\n              onClick={() => setIsMobileNavOpen(false)}\n            >\n              ✖\n            </button>\n            <ShopSideNav onSelectCategory={handleCategorySelect} />\n          </div>\n        )}\n        <div className=\"hidden mdl:inline-flex w-full mdl:w-[25%] h-full\">\n          <ShopSideNav onSelectCategory={handleCategorySelect} />\n        </div>\n        <div className=\"w-full mdl:w-[75%] h-full flex flex-col gap-10\">\n          <ProductBanner itemsPerPageFromBanner={itemsPerPageFromBanner} />\n          {!isCategoriesLoading && (\n            <Pagination itemsPerPage={itemsPerPage} selectedCategory={selectedCategory} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Catalog);\n"],"names":["Breadcrumbs","_ref","prevLocation","title","location","useLocation","locationPath","setLocationPath","useState","useEffect","pathname","split","_jsxs","className","children","_jsx","HiOutlineChevronRight","memo","itemsPerPageFromBanner","girdViewActive","setGridViewActive","listViewActive","setListViewActive","gridView","document","querySelector","listView","addEventListener","concat","BsGridFill","ImList","onChange","e","target","value","id","GoTriangleDown","Items","currentItems","_Fragment","filter","item","map","_item$category","Product","name","imageUrl","description","status","specifications","category","createdAt","inStock","price","_ref2","itemsPerPage","selectedCategory","dispatch","useDispatch","items","useSelector","state","products","list","currentPage","setCurrentPage","getProducts","page","limit","filteredItems","_item$category2","slice","pageCount","Math","ceil","length","ReactPaginate","nextLabel","onPageChange","event","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","pageLinkClassName","pageClassName","containerClassName","activeClassName","min","icons","BiCaretDown","onSelectCategory","categories","getCategories","NavTitle","onClick","ImPlus","Category","Catalog","isLoading","isCategoriesLoading","setItemsPerPage","setSelectedCategory","isMobileNavOpen","setIsMobileNavOpen","then","payload","defaultCategory","find","cat","handleCategorySelect","categoryId","ShopSideNav","ProductBanner","Pagination"],"sourceRoot":""}