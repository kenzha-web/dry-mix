{"version":3,"file":"static/js/779.442b7892.chunk.js","mappings":"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","sources":["components/pageProps/Breadcrumbs.js","components/Admin/CategoryEdit.js","components/Admin/ProductEdit.js","components/Admin/NewsEdit.js","components/Admin/AdminNavigation.js","hooks/useRedirectLoggedOutUser.js","pages/Manage/Manage.js"],"sourcesContent":["import {memo, useEffect, useState} from \"react\";\nimport { HiOutlineChevronRight } from \"react-icons/hi\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Breadcrumbs = ({ prevLocation, title }) => {\n  const location = useLocation();\n  const [locationPath, setLocationPath] = useState(\"\");\n  useEffect(() => {\n    setLocationPath(location.pathname.split(\"/\")[1]);\n  }, [location]);\n\n  return (\n    <div className=\"w-full py-10 xl:py-10 flex flex-col gap-3\">\n      <h1 className=\"text-5xl text-primeColor font-titleFont font-bold\">\n        {title}\n      </h1>\n      <p className=\"text-sm font-normal text-lightText capitalize flex items-center\">\n        <span> {prevLocation === \"\" ? \"Home\" : prevLocation}</span>\n\n        <span className=\"px-1\">\n          <HiOutlineChevronRight />\n        </span>\n        <span className=\"capitalize font-semibold text-primeColor\">\n          {locationPath}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default memo(Breadcrumbs);\n","import {memo, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst CategoryEdit = () => {\n  const [category, setCategory] = useState(\"\");\n  const [errMessages, setErrMessages] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  const handleMessages = (e) => {\n    setCategory(e.target.value);\n    setErrMessages(\"\");\n  };\n\n  const handleCreate = (e) => {\n    if (!category) {\n      setErrMessages(\"Создайте категорию\");\n    }\n    if (category) {\n      setSuccessMsg(\n        `Ваша категория была успешно создана.`\n      );\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"w-full lgl:w-[500px] mx-auto flex flex-col justify-start\">\n        {successMsg ? (\n          <div className=\"w-full\">\n            <p className=\"w-full px-4 py-10 text-green-500 font-medium font-titleFont\">\n              {successMsg}\n            </p>\n            <Link to=\"/manage\">\n              <button\n                className=\"w-ful h-10 bg-primeColor rounded-md text-gray-200 text-base font-titleFont font-semibold\n            tracking-wide hover:bg-black hover:text-white duration-300\"\n              >\n                Создать продукт\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <form className=\"w-full lgl:w-[500px] h-full flex flex-col justify-start\">\n            <div className=\"px-6 py-4 w-full h-full flex flex-col justify-start\">\n              <h1 className=\"font-titleFont text-center underline underline-offset-4 decoration-[1px] font-semibold text-2xl mdl:text-3xl mb-4 pt-10\">\n                Создать категорию\n              </h1>\n              <div className=\"flex flex-col gap-3\">\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Категория\n                  </p>\n                  <input\n                    onChange={handleMessages}\n                    value={category}\n                    className=\"w-full h-8 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                    type=\"text\"\n                    placeholder=\"пр. Штукатурка\"\n                  />\n                  {errMessages && (\n                    <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                      <span className=\"font-bold italic mr-1\">!</span>\n                      {errMessages}\n                    </p>\n                  )}\n                </div>\n                <button\n                  onClick={handleCreate}\n                  className={`${\"bg-greenPrimeColor hover:bg-black hover:text-white cursor-pointer\"} w-full text-gray-200 text-base font-medium h-10 rounded-md hover:text-white duration-300`}\n                >\n                  Создать категорию\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n\n  );\n}\n\nexport default memo(CategoryEdit);\n","import {memo, useState} from \"react\";\nimport {AiOutlineCloudUpload} from \"react-icons/ai\";\n\nconst ProductEdit = () => {\n  const [productName, setProductName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const [errProductName, setErrProductName] = useState(\"\");\n  const [errDescription, setErrDescription] = useState(\"\");\n  const [errPrice, setErrPrice] = useState(\"\");\n  const [errImage, setErrImage] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  const handleProductName = (e) => {\n    setProductName(e.target.value);\n    setErrProductName(\"\");\n  };\n  const handleDescription = (e) => {\n    setDescription(e.target.value);\n    setErrDescription(\"\");\n  };\n  const handlePrice = (e) => {\n    setPrice(e.target.value);\n    setErrPrice(\"\");\n  };\n  const handleImage = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setErrImage(\"\");\n    } else {\n      setErrImage(\"Выберите изображение.\");\n    }\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n\n    if (!productName) {\n      setErrProductName(\"Введите название продукта.\");\n    }\n    if (!description) {\n      setErrDescription(\"Введите описание.\");\n    }\n    if (!price) {\n      setErrPrice(\"Введите цену.\");\n    }\n    if (!image) {\n      setErrImage(\"Пожалуйста, загрузите изображение.\");\n    }\n\n    if (productName && description && price && image) {\n      try {\n        const formData = new FormData();\n        formData.append(\"productName\", productName);\n        formData.append(\"description\", description);\n        formData.append(\"price\", price);\n        formData.append(\"image\", image);\n\n        const response = await fetch(\"/api/products\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          setSuccessMsg(\"Продукт успешно создан.\");\n          setProductName(\"\");\n          setDescription(\"\");\n          setPrice(\"\");\n          setImage(null);\n        } else {\n          const errorData = await response.json();\n          setErrImage(errorData.message || \"Ошибка создания продукта.\");\n        }\n      } catch (error) {\n        setErrImage(\"Ошибка соединения с сервером.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"w-full lgl:w-[500px] mx-auto flex flex-col justify-start\">\n        {successMsg ? (\n          <div className=\"w-[500px]\">\n            <p className=\"w-full px-4 py-10 text-green-500 font-medium font-titleFont\">\n              {successMsg}\n            </p>\n          </div>\n        ) : (\n          <form className=\"w-full lgl:w-[500px] h-full flex flex-col justify-start\">\n            <div className=\"px-6 py-4 w-full h-full flex flex-col justify-start\">\n              <h1 className=\"font-titleFont text-center underline underline-offset-4 decoration-[1px] font-semibold text-2xl mdl:text-3xl mb-4 pt-10\">\n                Создать продукт\n              </h1>\n              <div className=\"flex flex-col gap-3\">\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Название продукта\n                  </p>\n                  <input\n                    onChange={handleProductName}\n                    value={productName}\n                    className=\"w-full h-8 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                    type=\"text\"\n                  />\n                  {errProductName && (\n                    <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                      <span className=\"font-bold italic mr-1\">!</span>\n                      {errProductName}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Описание\n                  </p>\n                  <textarea\n                    value={description}\n                    onChange={handleDescription}\n                    className=\"w-full h-20 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                  ></textarea>\n                  {errDescription && (\n                    <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                      <span className=\"font-bold italic mr-1\">!</span>\n                      {errDescription}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Цена\n                  </p>\n                  <input\n                    onChange={handlePrice}\n                    value={price}\n                    className=\"w-full h-8 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                    type=\"text\"\n                  />\n                  {errPrice && (\n                    <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                      <span className=\"font-bold italic mr-1\">!</span>\n                      {errPrice}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Загрузить изображение\n                  </p>\n                  <label className=\"flex items-center justify-center h-20 border-[2px] border-dashed border-gray-400 rounded-md cursor-pointer hover:border-greenPrimeColor\">\n                    <AiOutlineCloudUpload size={24} className=\"text-gray-600\" />\n                    <span className=\"ml-2 text-sm text-gray-600\">Загрузить</span>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleImage}\n                      className=\"hidden\"\n                    />\n                  </label>\n                  {image && (\n                    <p className=\"text-sm text-green-500\">Изображение выбрано</p>\n                  )}\n                  {errImage && (\n                    <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                      <span className=\"font-bold italic mr-1\">!</span>\n                      {errImage}\n                    </p>\n                  )}\n                </div>\n                <button\n                  onClick={handleSignUp}\n                  className=\"bg-greenPrimeColor hover:bg-black hover:text-white cursor-pointer w-full text-gray-200 text-base font-medium h-10 rounded-md duration-300\"\n                >\n                  Создать продукт\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ProductEdit);\n\n","import {memo, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\n\nconst NewsEdit = () => {\n  const [previewImage, setPreviewImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const [errMessages, setErrMessages] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  const handlePreviewImage = (e) => {\n    const file = e.target.files[0];\n    setPreviewImage(file);\n    setErrMessages(\"\");\n  };\n\n  const handleImages = (e) => {\n    const files = Array.from(e.target.files);\n    setImages(files);\n    setErrMessages(\"\");\n  };\n\n  const handleCreate = (e) => {\n    e.preventDefault();\n    if (!previewImage) {\n      setErrMessages(\"Выберите превью-изображение.\");\n      return;\n    }\n    if (images.length === 0) {\n      setErrMessages(\"Добавьте хотя бы одно изображение.\");\n      return;\n    }\n    if (!title) {\n      setErrMessages(\"Введите заголовок новости.\");\n      return;\n    }\n    if (!description) {\n      setErrMessages(\"Введите описание новости.\");\n      return;\n    }\n\n    setSuccessMsg(\"Новость успешно создана.\");\n    setPreviewImage(null);\n    setImages([]);\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"w-full lgl:w-[500px] mx-auto flex flex-col justify-start\">\n        {successMsg ? (\n          <div className=\"w-full\">\n            <p className=\"w-full px-4 py-10 text-green-500 font-medium font-titleFont\">\n              {successMsg}\n            </p>\n            <Link to=\"/manage\">\n              <button\n                className=\"w-full h-10 bg-primeColor rounded-md text-gray-200 text-base font-titleFont font-semibold\n              tracking-wide hover:bg-black hover:text-white duration-300\"\n              >\n                Вернуться назад\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <form className=\"w-full lgl:w-[500px] h-full flex flex-col justify-start\">\n            <div className=\"px-6 py-4 w-full h-full flex flex-col justify-start\">\n              <h1 className=\"font-titleFont text-center underline underline-offset-4 decoration-[1px] font-semibold text-2xl mdl:text-3xl mb-4 pt-10\">\n                Создать новость\n              </h1>\n\n              <div className=\"flex flex-col gap-3\">\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Превью-изображение\n                  </p>\n                  <label className=\"flex items-center justify-center h-20 border-[2px] border-dashed border-gray-400 rounded-md cursor-pointer hover:border-greenPrimeColor\">\n                    <AiOutlineCloudUpload size={24} className=\"text-gray-600\" />\n                    <span className=\"ml-2 text-sm text-gray-600\">Загрузить</span>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handlePreviewImage}\n                      className=\"hidden\"\n                    />\n                  </label>\n                  {previewImage && (\n                    <p className=\"text-sm text-green-500\">Изображение выбрано</p>\n                  )}\n                </div>\n\n              {/* Множественная загрузка изображений */}\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Изображения (несколько)\n                  </p>\n                  <label className=\"flex items-center justify-center h-20 border-[2px] border-dashed border-gray-400 rounded-md cursor-pointer hover:border-greenPrimeColor\">\n                    <AiOutlineCloudUpload size={24} className=\"text-gray-600\" />\n                    <span className=\"ml-2 text-sm text-gray-600\">Загрузить</span>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      multiple\n                      onChange={handleImages}\n                      className=\"hidden\"\n                    />\n                  </label>\n                  {images.length > 0 && (\n                    <p className=\"text-sm text-green-500\">\n                      Выбрано {images.length} изображений\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Заголовок новости\n                  </p>\n                  <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"Введите заголовок\"\n                    className=\"w-full h-8 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                  />\n                </div>\n\n                <div className=\"flex flex-col gap-.5\">\n                  <p className=\"font-titleFont text-base font-semibold text-gray-600\">\n                    Описание новости\n                  </p>\n                  <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Введите описание\"\n                    className=\"w-full h-20 placeholder:text-sm placeholder:tracking-wide px-4 text-base font-medium placeholder:font-normal rounded-md border-[1px] border-gray-400 outline-none\"\n                  ></textarea>\n                </div>\n                {errMessages && (\n                  <p className=\"text-sm text-red-500 font-titleFont font-semibold px-4\">\n                    <span className=\"font-bold italic mr-1\">!</span>\n                    {errMessages}\n                  </p>\n                )}\n              </div>\n              <button\n                onClick={handleCreate}\n                className=\"bg-greenPrimeColor hover:bg-black hover:text-white cursor-pointer w-full text-gray-200 text-base font-medium h-10 rounded-md hover:text-white duration-300 mt-4\"\n              >\n                Создать новость\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NewsEdit);\n","import {memo, useState} from \"react\";\nimport CategoryEdit from \"./CategoryEdit\";\nimport ProductEdit from \"./ProductEdit\";\nimport NewsEdit from \"./NewsEdit\";\n\nconst AdminNavigation = () => {\n  const [activeTab, setActiveTab] = useState(\"\");\n\n  const tabs = [\"Категория\", \"Продукт\", \"Новости\"];\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center mt-4 md:mt-6 border-b-4 border-gray-300\">\n        {tabs.map((tab) => (\n          <button\n            key={tab}\n            className={`pb-2 md:pb-4 text-sm md:text-xl font-bold ${\n              activeTab === tab\n                ? \"text-greenPrimeColor border-b-4 border-greenPrimeColor\"\n                : \"text-gray-500\"\n            }`}\n            onClick={() => setActiveTab(tab)}\n            style={{\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n      {activeTab === \"Категория\" && (<CategoryEdit />)}\n      {activeTab === \"Продукт\" && (<ProductEdit />)}\n      {activeTab === \"Новости\" && (<NewsEdit />)}\n    </>\n  )\n}\n\nexport default memo(AdminNavigation);\n","import {useNavigate} from \"react-router-dom\";\nimport {useEffect} from \"react\";\nimport authService from \"../store/services/auth/authFeature\";\n\nexport const UseRedirectLoggedOutUser = (path) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let isLoggedIn;\n\n    const redirectLoggedOutUser = async () => {\n      try {\n        isLoggedIn = await authService.getLogInStatus();\n      } catch (error) {\n        console.log(error.message);\n      }\n\n      if(!isLoggedIn) {\n        navigate(path);\n        return;\n      }\n    }\n    redirectLoggedOutUser();\n  }, [path, navigate])\n}\n","import {memo, useEffect, useState} from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/pageProps/Breadcrumbs\";\nimport AdminNavigation from \"../../components/Admin/AdminNavigation\";\nimport {UseRedirectLoggedOutUser} from \"../../hooks/useRedirectLoggedOutUser\";\n\nconst Manage = () => {\n  UseRedirectLoggedOutUser(\"/\");\n  const role = \"admin\";\n  const location = useLocation();\n  const [prevLocation, setPrevLocation] = useState(\"\");\n\n  useEffect(() => {\n    if (location.state && location.state.data) {\n      setPrevLocation(location.state.data);\n    } else {\n      setPrevLocation(\"Home\");\n    }\n  }, [location]);\n\n  return (\n    <div className=\"max-w-container mx-auto px-4\">\n      <Breadcrumbs title=\"Админ панель\" prevLocation={prevLocation} />\n      <div className=\"pb-10\">\n        <AdminNavigation />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Manage);\n"],"names":["Breadcrumbs","_ref","prevLocation","title","location","useLocation","locationPath","setLocationPath","useState","useEffect","pathname","split","_jsxs","className","children","_jsx","HiOutlineChevronRight","memo","CategoryEdit","category","setCategory","errMessages","setErrMessages","successMsg","setSuccessMsg","Link","to","onChange","e","target","value","type","placeholder","onClick","concat","ProductEdit","productName","setProductName","description","setDescription","price","setPrice","image","setImage","errProductName","setErrProductName","errDescription","setErrDescription","errPrice","setErrPrice","errImage","setErrImage","AiOutlineCloudUpload","size","accept","file","files","async","preventDefault","formData","FormData","append","response","fetch","method","body","ok","errorData","json","message","error","NewsEdit","previewImage","setPreviewImage","images","setImages","setTitle","multiple","Array","from","length","AdminNavigation","activeTab","setActiveTab","_Fragment","map","tab","style","width","textAlign","Manage","path","navigate","useNavigate","isLoggedIn","authService","getLogInStatus","console","log","redirectLoggedOutUser","UseRedirectLoggedOutUser","setPrevLocation","state","data"],"sourceRoot":""}